//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Odey.Framework.Keeley.Entities
{
    using System;
    
    public partial class PortfolioEvent_GetMultipleByPositionLessThanDate_Result
    {
        public int PortfolioEventID { get; set; }
        public int InternalAllocationId { get; set; }
        public int PositionId { get; set; }
        public System.DateTime ReferenceDate { get; set; }
        public int PortfolioAggregationLevelId { get; set; }
        public int PortfolioEventTypeId { get; set; }
        public int ChangeNumber { get; set; }
        public decimal Quantity { get; set; }
        public decimal FXRate { get; set; }
        public decimal Price { get; set; }
        public decimal NetCostChangeInstrumentCurrency { get; set; }
        public decimal NetCostChangeBookCurrency { get; set; }
        public decimal NetCostInstrumentCurrency { get; set; }
        public decimal NetCostBookCurrency { get; set; }
        public decimal DeltaNetCostChangeInstrumentCurrency { get; set; }
        public decimal DeltaNetCostChangeBookCurrency { get; set; }
        public decimal DeltaNetCostInstrumentCurrency { get; set; }
        public decimal DeltaNetCostBookCurrency { get; set; }
        public decimal TodayNetPositionChange { get; set; }
        public decimal TodayDeltaNetCostChangeInstrumentCurrency { get; set; }
        public decimal TodayDeltaNetCostChangeBookCurrency { get; set; }
        public decimal TodayNetCostChangeInstrumentCurrency { get; set; }
        public decimal TodayNetCostChangeBookCurrency { get; set; }
        public decimal NetPosition { get; set; }
        public System.DateTime StartDt { get; set; }
        public int UpdateUserID { get; set; }
        public byte[] DataVersion { get; set; }
        public System.DateTime InputDate { get; set; }
        public int OrderingResolution { get; set; }
        public decimal Accrual { get; set; }
        public decimal TodayAccrual { get; set; }
        public decimal CashBenefit { get; set; }
        public decimal TodayCashBenefit { get; set; }
        public decimal TodayCashBenefitBookCurrency { get; set; }
        public decimal RealisedPricePnl { get; set; }
        public decimal TodayRealisedPricePnl { get; set; }
        public decimal RealisedFxPnl { get; set; }
        public decimal TodayRealisedFxPnl { get; set; }
        public decimal TotalAccrual { get; set; }
        public decimal TodayRealisedPricePnlBookCurrency { get; set; }
        public bool RealisePnl { get; set; }
        public decimal TradeInstrumentFXRate { get; set; }
        public bool ZeroOutAccrual { get; set; }
        public Nullable<decimal> BondNominal { get; set; }
        public Nullable<decimal> BondNominalChange { get; set; }
        public Nullable<decimal> CapitalChange { get; set; }
        public Nullable<decimal> TodayCapitalChange { get; set; }
        public Nullable<int> FXRateId { get; set; }
        public bool UseFXRateForDay { get; set; }
        public Nullable<decimal> RealisedCash { get; set; }
        public Nullable<decimal> ExternalRealisedPnl { get; set; }
        public Nullable<decimal> OriginalDeltaNetCostBookCurrency { get; set; }
        public Nullable<decimal> OriginalDeltaNetCostInstrumentCurrency { get; set; }
        public decimal ITDRealisedPricePnl { get; set; }
        public decimal ITDRealisedFXPnl { get; set; }
        public bool ResetCost { get; set; }
        public Nullable<decimal> Yield { get; set; }
        public Nullable<decimal> BlendedYield { get; set; }
        public Nullable<decimal> AmortisationCost { get; set; }
        public Nullable<decimal> AmortisationQuantity { get; set; }
        public Nullable<decimal> TotalAmortisationQuantity { get; set; }
        public Nullable<decimal> InflationAssumption { get; set; }
        public Nullable<decimal> BlendedInflationAssumption { get; set; }
        public Nullable<int> AssociatedPositionId { get; set; }
        public bool AdjustQuantityOnly { get; set; }
        public Nullable<decimal> TodayMaxDeltaNetCostInstrumentCurrency { get; set; }
        public Nullable<decimal> TodayMaxNetPosition { get; set; }
        public Nullable<decimal> UnadjustedNetPosition { get; set; }
        public Nullable<bool> Revalue { get; set; }
        public System.DateTime TradeDate { get; set; }
        public Nullable<bool> TodayZeroOutAccrual { get; set; }
    }
}
